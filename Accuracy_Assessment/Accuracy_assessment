{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPrrxHrDyuRNry4nOSMH0ys"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"68f4b01af77f4b0a93967eb425afb2e0":{"model_module":"@jupyter-widgets/controls","model_name":"LabelModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"LabelModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"LabelView","description":"","description_tooltip":null,"layout":"IPY_MODEL_2e415b3a78274e6d9c7208ff37367ab1","placeholder":"​","style":"IPY_MODEL_318e470a31924f97988a00f1c6ab4411","value":"Classifying point 1 of 120..."}},"2e415b3a78274e6d9c7208ff37367ab1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"318e470a31924f97988a00f1c6ab4411":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"a498282247584c1ba6d546df5f6e7f3f":{"model_module":"@jupyter-widgets/output","model_name":"OutputModel","model_module_version":"1.0.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/output","_model_module_version":"1.0.0","_model_name":"OutputModel","_view_count":null,"_view_module":"@jupyter-widgets/output","_view_module_version":"1.0.0","_view_name":"OutputView","layout":"IPY_MODEL_3daed2a1f4024f858c753a1bf366ef2c","msg_id":"","outputs":[{"output_type":"display_data","data":{"text/plain":"VBox(children=(HTML(value='<h3><b>Point 1/120</b>: Please verify this point for class: <b>Water</b></h3>'), HT…","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"aa5fa90e3b5a425e9c3a73dba5421d42"}},"metadata":{}}]}},"3daed2a1f4024f858c753a1bf366ef2c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"aa5fa90e3b5a425e9c3a73dba5421d42":{"model_module":"@jupyter-widgets/controls","model_name":"VBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"VBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"VBoxView","box_style":"","children":["IPY_MODEL_fd165fdbbe3448c6a515ed2490d0ab4a","IPY_MODEL_5d266380ab8140cd82b2d8cfcf7012d9","IPY_MODEL_e6e1381692844053ac3a9121d0430ff7"],"layout":"IPY_MODEL_e67c1766f8bb4f42b0d133c160a3e481"}},"fd165fdbbe3448c6a515ed2490d0ab4a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6a8bb8af69bd40cc82e0671dc112a7d8","placeholder":"​","style":"IPY_MODEL_b44bd829666d47b78195d9d42bcdae09","value":"<h3><b>Point 1/120</b>: Please verify this point for class: <b>Water</b></h3>"}},"5d266380ab8140cd82b2d8cfcf7012d9":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4bdda047b8fd4d93ae4896e1e8870173","placeholder":"​","style":"IPY_MODEL_b11bff3e0c914191bedef810ceabd282","value":"<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe srcdoc=\"&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    \n    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;\n    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://code.jquery.com/jquery-3.7.1.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.js&quot;&gt;&lt;/script&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.2.0/css/all.min.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/python-visualization/folium/folium/templates/leaflet.awesome.rotate.min.css&quot;/&gt;\n    \n            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,\n                initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot; /&gt;\n            &lt;style&gt;\n                #map_18031e7a9cb992f9f6fa615af9680b9e {\n                    position: relative;\n                    width: 800.0px;\n                    height: 400.0px;\n                    left: 0.0%;\n                    top: 0.0%;\n                }\n                .leaflet-container { font-size: 1rem; }\n            &lt;/style&gt;\n\n            &lt;style&gt;html, body {\n                width: 100%;\n                height: 100%;\n                margin: 0;\n                padding: 0;\n            }\n            &lt;/style&gt;\n\n            &lt;style&gt;#map {\n                position:absolute;\n                top:0;\n                bottom:0;\n                right:0;\n                left:0;\n                }\n            &lt;/style&gt;\n\n            &lt;script&gt;\n                L_NO_TOUCH = false;\n                L_DISABLE_3D = false;\n            &lt;/script&gt;\n\n        \n&lt;/head&gt;\n&lt;body&gt;\n    \n    \n            &lt;div class=&quot;folium-map&quot; id=&quot;map_18031e7a9cb992f9f6fa615af9680b9e&quot; &gt;&lt;/div&gt;\n        \n&lt;/body&gt;\n&lt;script&gt;\n    \n    \n            var map_18031e7a9cb992f9f6fa615af9680b9e = L.map(\n                &quot;map_18031e7a9cb992f9f6fa615af9680b9e&quot;,\n                {\n                    center: [24.020007466307682, 82.67397680690884],\n                    crs: L.CRS.EPSG3857,\n                    ...{\n  &quot;zoom&quot;: 22,\n  &quot;zoomControl&quot;: true,\n  &quot;preferCanvas&quot;: false,\n}\n\n                }\n            );\n\n            \n\n        \n    \n            var tile_layer_0d32cadd873ef8aaaf50628728cb25aa = L.tileLayer(\n                &quot;https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}&quot;,\n                {\n  &quot;minZoom&quot;: 0,\n  &quot;maxZoom&quot;: 18,\n  &quot;maxNativeZoom&quot;: 18,\n  &quot;noWrap&quot;: false,\n  &quot;attribution&quot;: &quot;Esri, et al.&quot;,\n  &quot;subdomains&quot;: &quot;abc&quot;,\n  &quot;detectRetina&quot;: false,\n  &quot;tms&quot;: false,\n  &quot;opacity&quot;: 1,\n}\n\n            );\n        \n    \n            tile_layer_0d32cadd873ef8aaaf50628728cb25aa.addTo(map_18031e7a9cb992f9f6fa615af9680b9e);\n        \n    \n            var marker_848482b34eb7ff30ccd09436bf486211 = L.marker(\n                [24.020007466307682, 82.67397680690884],\n                {\n}\n            ).addTo(map_18031e7a9cb992f9f6fa615af9680b9e);\n        \n    \n        var popup_e4b7192259b55113181dd2c3211504cc = L.popup({\n  &quot;maxWidth&quot;: &quot;100%&quot;,\n});\n\n        \n            \n                var html_522a5788a94db1019c337e7c327a4f8b = $(`&lt;div id=&quot;html_522a5788a94db1019c337e7c327a4f8b&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Classify this exact point&lt;/div&gt;`)[0];\n                popup_e4b7192259b55113181dd2c3211504cc.setContent(html_522a5788a94db1019c337e7c327a4f8b);\n            \n        \n\n        marker_848482b34eb7ff30ccd09436bf486211.bindPopup(popup_e4b7192259b55113181dd2c3211504cc)\n        ;\n\n        \n    \n&lt;/script&gt;\n&lt;/html&gt;\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"}},"e6e1381692844053ac3a9121d0430ff7":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_113880a96f18424b91f192c11a85da89","IPY_MODEL_64040f2a070b48c6970290bd66b96b74","IPY_MODEL_51d856005107497c849c7628af5f6382","IPY_MODEL_c611b60a67074b25b3b8f5fdb05011ba","IPY_MODEL_ff1cc53dacf3432d8535424ff409ba8f","IPY_MODEL_6ed3c07780ce48879c1b937272e01cf4"],"layout":"IPY_MODEL_a0901e51bfcd4b6b96ebb11e74d4ae4c"}},"e67c1766f8bb4f42b0d133c160a3e481":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"810px"}},"6a8bb8af69bd40cc82e0671dc112a7d8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b44bd829666d47b78195d9d42bcdae09":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4bdda047b8fd4d93ae4896e1e8870173":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b11bff3e0c914191bedef810ceabd282":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"113880a96f18424b91f192c11a85da89":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ButtonView","button_style":"primary","description":"1: Water","disabled":false,"icon":"","layout":"IPY_MODEL_a2573b13b74843389beabd7472dcf119","style":"IPY_MODEL_2aaab8c8cb794221a330d05928b636f9","tooltip":""}},"64040f2a070b48c6970290bd66b96b74":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ButtonView","button_style":"primary","description":"2: Agriculture & Vegetation","disabled":false,"icon":"","layout":"IPY_MODEL_fa190d4a627b4969b4f1abc997a5495b","style":"IPY_MODEL_b617e5dd58064615aa977f7cc1970eb5","tooltip":""}},"51d856005107497c849c7628af5f6382":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ButtonView","button_style":"primary","description":"3: Settlement","disabled":false,"icon":"","layout":"IPY_MODEL_e706937fcaf0455191f96aca6775afe8","style":"IPY_MODEL_cc725d509c53494ab120dde6d58358c4","tooltip":""}},"c611b60a67074b25b3b8f5fdb05011ba":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ButtonView","button_style":"primary","description":"4: Mining","disabled":false,"icon":"","layout":"IPY_MODEL_ef3f77c5a13e4ae882ad11e56b75adc9","style":"IPY_MODEL_8b59971a085e4adcb76d3675050e5598","tooltip":""}},"ff1cc53dacf3432d8535424ff409ba8f":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ButtonView","button_style":"primary","description":"5: Barren Land","disabled":false,"icon":"","layout":"IPY_MODEL_b47d4b7d2c2a4ac2ae019dc40be9fd28","style":"IPY_MODEL_2ac7436be95c4c42b69704488977d8fc","tooltip":""}},"6ed3c07780ce48879c1b937272e01cf4":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ButtonView","button_style":"primary","description":"6: Forest","disabled":false,"icon":"","layout":"IPY_MODEL_3e5f6e21328848d98ef351849293dd75","style":"IPY_MODEL_8f1c3bd4397f4a9aa8299bb1b926fa2d","tooltip":""}},"a0901e51bfcd4b6b96ebb11e74d4ae4c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":"wrap","grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":"center","justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a2573b13b74843389beabd7472dcf119":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"auto"}},"2aaab8c8cb794221a330d05928b636f9":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","button_color":null,"font_weight":""}},"fa190d4a627b4969b4f1abc997a5495b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"auto"}},"b617e5dd58064615aa977f7cc1970eb5":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","button_color":null,"font_weight":""}},"e706937fcaf0455191f96aca6775afe8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"auto"}},"cc725d509c53494ab120dde6d58358c4":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","button_color":null,"font_weight":""}},"ef3f77c5a13e4ae882ad11e56b75adc9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"auto"}},"8b59971a085e4adcb76d3675050e5598":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","button_color":null,"font_weight":""}},"b47d4b7d2c2a4ac2ae019dc40be9fd28":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"auto"}},"2ac7436be95c4c42b69704488977d8fc":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","button_color":null,"font_weight":""}},"3e5f6e21328848d98ef351849293dd75":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"auto"}},"8f1c3bd4397f4a9aa8299bb1b926fa2d":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","button_color":null,"font_weight":""}}}}},"cells":[{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5uUduonhKTbT","executionInfo":{"status":"ok","timestamp":1750409616883,"user_tz":-330,"elapsed":33026,"user":{"displayName":"DANESH SELWAL","userId":"10685518505246578435"}},"outputId":"e5630512-7285-4ec2-eddc-aac72ee02bee"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n","Requirement already satisfied: pandas in /usr/local/lib/python3.11/dist-packages (2.3.0)\n","Requirement already satisfied: numpy>=1.23.2 in /usr/local/lib/python3.11/dist-packages (from pandas) (2.0.2)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas) (2.9.0.post0)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas) (2025.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas) (2025.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.2->pandas) (1.17.0)\n","Requirement already satisfied: folium in /usr/local/lib/python3.11/dist-packages (0.19.7)\n","Requirement already satisfied: branca>=0.6.0 in /usr/local/lib/python3.11/dist-packages (from folium) (0.8.1)\n","Requirement already satisfied: jinja2>=2.9 in /usr/local/lib/python3.11/dist-packages (from folium) (3.1.6)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (from folium) (2.0.2)\n","Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (from folium) (2.32.3)\n","Requirement already satisfied: xyzservices in /usr/local/lib/python3.11/dist-packages (from folium) (2025.4.0)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2>=2.9->folium) (3.0.2)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests->folium) (3.4.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests->folium) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests->folium) (2.4.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests->folium) (2025.6.15)\n","Requirement already satisfied: rasterio in /usr/local/lib/python3.11/dist-packages (1.4.3)\n","Requirement already satisfied: affine in /usr/local/lib/python3.11/dist-packages (from rasterio) (2.4.0)\n","Requirement already satisfied: attrs in /usr/local/lib/python3.11/dist-packages (from rasterio) (25.3.0)\n","Requirement already satisfied: certifi in /usr/local/lib/python3.11/dist-packages (from rasterio) (2025.6.15)\n","Requirement already satisfied: click>=4.0 in /usr/local/lib/python3.11/dist-packages (from rasterio) (8.2.1)\n","Requirement already satisfied: cligj>=0.5 in /usr/local/lib/python3.11/dist-packages (from rasterio) (0.7.2)\n","Requirement already satisfied: numpy>=1.24 in /usr/local/lib/python3.11/dist-packages (from rasterio) (2.0.2)\n","Requirement already satisfied: click-plugins in /usr/local/lib/python3.11/dist-packages (from rasterio) (1.1.1)\n","Requirement already satisfied: pyparsing in /usr/local/lib/python3.11/dist-packages (from rasterio) (3.2.3)\n","Collecting python-docx\n","  Downloading python_docx-1.2.0-py3-none-any.whl.metadata (2.0 kB)\n","Requirement already satisfied: lxml>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from python-docx) (5.4.0)\n","Requirement already satisfied: typing_extensions>=4.9.0 in /usr/local/lib/python3.11/dist-packages (from python-docx) (4.14.0)\n","Downloading python_docx-1.2.0-py3-none-any.whl (252 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m253.0/253.0 kB\u001b[0m \u001b[31m4.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: python-docx\n","Successfully installed python-docx-1.2.0\n"]}],"source":["# 1. MOUNT GOOGLE DRIVE\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","# 2. INSTALL RASTERIO\n","# 1. UPGRADE LIBRARIES AND INSTALL FOLIUM\n","# 1. INSTALL/UPDATE LIBRARIES\n","!pip install -U pandas\n","!pip install folium\n","!pip install rasterio\n","!pip install python-docx"]},{"cell_type":"code","source":["# 2. IMPORT LIBRARIES\n","import rasterio\n","import numpy as np\n","import ipywidgets as widgets\n","from ipywidgets import HBox, VBox, Layout, HTML\n","from IPython.display import display, clear_output\n","import pandas as pd\n","import datetime\n","import getpass\n","import folium\n","from sklearn.metrics import confusion_matrix, cohen_kappa_score\n","from google.colab import files\n","import docx\n","from docx.shared import Pt\n","import random\n","\n","#==============================================================================\n","# A. CONFIGURATION - !!! EDIT THIS SECTION !!!\n","#==============================================================================\n","\n","# --- Define the paths to your images in Google Drive ---\n","BASE_IMG_PATH = '/content/drive/My Drive/Accuracy_assessment/Singrauli_Merged_Image.tif'\n","CNN_IMG_PATH = '/content/drive/My Drive/Accuracy_assessment/cnn_them.img'\n","RF_IMG_PATH = '/content/drive/My Drive/Accuracy_assessment/rf_them.img'\n","\n","# --- Define your class labels ---\n","CLASS_LABELS = {\n","    1: 'Water',\n","    2: 'Agriculture & Vegetation',\n","    3: 'Settlement',\n","    4: 'Mining',\n","    5: 'Barren Land',\n","    6: 'Forest',\n","}\n","\n","#==============================================================================\n","# C. MODIFIED FUNCTION: STRATIFIED SAMPLING PLAN - (No need to edit)\n","#==============================================================================\n","def create_stratified_sampling_plan(image_path, class_labels, points_per_class):\n","    \"\"\"\n","    Generates an ORDERED, stratified sampling plan.\n","    Returns a list of (y, x, class_name) coordinates to be sampled, grouped by class.\n","    \"\"\"\n","    print(\"Creating stratified sampling plan (grouped by class)...\")\n","    sampling_plan = []\n","    with rasterio.open(image_path) as src:\n","        image = src.read(1)\n","\n","        for class_code, class_name in class_labels.items():\n","            print(f\"  - Finding pixels for class: {class_name}\")\n","            rows, cols = np.where(image == class_code)\n","\n","            if len(rows) < points_per_class:\n","                print(f\"    Warning: Class '{class_name}' has only {len(rows)} pixels. Using all of them.\")\n","                points_to_sample = len(rows)\n","            else:\n","                points_to_sample = points_per_class\n","\n","            pixel_locations = list(zip(rows, cols))\n","\n","            if points_to_sample > 0:\n","                chosen_points = random.sample(pixel_locations, points_to_sample)\n","                # Add the class name to each point for context\n","                sampling_plan.extend([(p[0], p[1], class_name) for p in chosen_points])\n","\n","    # --- CHANGE: The shuffle step is now removed to keep points grouped ---\n","    # random.shuffle(sampling_plan)\n","    print(\"Sampling plan created successfully.\")\n","    return sampling_plan\n","\n","#==============================================================================\n","# D. ACCURACY REPORT GENERATION FUNCTION - (No need to edit)\n","#==============================================================================\n","def generate_accuracy_report(df, model_name, classified_col, ref_col, class_labels, image_file_path):\n","    report_lines = []\n","    class_names = {0: \"Background\", **{k: v for k, v in class_labels.items()}}\n","    all_class_codes = sorted(list(class_labels.keys()))\n","\n","    report_lines.append(\"CLASSIFICATION ACCURACY ASSESSMENT REPORT\")\n","    report_lines.append(\"-----------------------------------------\")\n","    report_lines.append(f\"Image File : {image_file_path}\")\n","    report_lines.append(f\"User Name  : {getpass.getuser()}\")\n","    report_lines.append(f\"Date       : {datetime.datetime.now(datetime.timezone.utc).astimezone().strftime('%a %b %d %H:%M:%S %Y')}\")\n","    report_lines.append(\"\\n\\n\")\n","\n","    y_true = df[ref_col]\n","    y_pred = df[classified_col]\n","    cm = confusion_matrix(y_true, y_pred, labels=all_class_codes)\n","\n","    cm_df = pd.DataFrame(cm, index=[f\"   {class_names[i]}\" for i in all_class_codes],\n","                         columns=[f\"   {class_names[i]}\" for i in all_class_codes])\n","\n","    report_lines.append(\"ERROR MATRIX\")\n","    report_lines.append(\"------------\")\n","    report_lines.append(\"              Reference Data\")\n","    report_lines.append(\"              --------------\")\n","\n","    cm_string = cm_df.to_string(header=True, index=True)\n","    report_lines.append(\"Classified Data\\n---------------\")\n","    report_lines.append(cm_string)\n","\n","    row_totals = cm.sum(axis=1)\n","    col_totals = cm.sum(axis=0)\n","\n","    report_lines.append(\"\\n\" + pd.DataFrame({\n","        'Row Total': row_totals,\n","        'Column Total': col_totals\n","    }, index=[f\"   {class_names[i]}\" for i in all_class_codes]).T.to_string())\n","\n","    report_lines.append(\"\\n\\n\\t\\t----- End of Error Matrix -----\\n\\n\")\n","\n","    report_lines.append(\"ACCURACY TOTALS\")\n","    report_lines.append(\"----------------\")\n","\n","    num_correct = np.diag(cm)\n","    producers_accuracy = np.divide(num_correct, col_totals, out=np.zeros_like(num_correct, dtype=float), where=col_totals!=0)\n","    users_accuracy = np.divide(num_correct, row_totals, out=np.zeros_like(num_correct, dtype=float), where=row_totals!=0)\n","\n","    acc_df = pd.DataFrame({\n","        'Class Name': [class_names[i] for i in all_class_codes],\n","        'Reference Totals': col_totals,\n","        'Classified Totals': row_totals,\n","        'Number Correct': num_correct,\n","        'Producers Accuracy': [f\"{acc:.2%}\" for acc in producers_accuracy],\n","        'Users Accuracy': [f\"{acc:.2%}\" for acc in users_accuracy]\n","    })\n","\n","    report_lines.append(acc_df.to_string(index=False))\n","\n","    total_correct = np.sum(num_correct)\n","    total_points = np.sum(cm)\n","    overall_accuracy = total_correct / total_points if total_points > 0 else 0\n","    report_lines.append(f\"\\n\\nOverall Classification Accuracy =   {overall_accuracy:.2%}\")\n","    report_lines.append(\"\\n\\n\\t\\t----- End of Accuracy Totals -----\\n\\n\")\n","\n","    report_lines.append(\"KAPPA (K^) STATISTICS\")\n","    report_lines.append(\"---------------------\")\n","\n","    overall_kappa = cohen_kappa_score(y_true, y_pred, labels=all_class_codes)\n","    report_lines.append(f\"Overall Kappa Statistics = {overall_kappa:.4f}\\n\")\n","\n","    report_lines.append(\"Conditional Kappa for each Category.\")\n","    report_lines.append(\"------------------------------------\")\n","    kappa_data = []\n","    for i, code in enumerate(all_class_codes):\n","        observed = num_correct[i]\n","        chance = (row_totals[i] * col_totals[i]) / total_points if total_points > 0 else 0\n","        k_cond = (observed - chance) / (col_totals[i] - chance) if (col_totals[i] - chance) != 0 else 0\n","        kappa_data.append({'Class Name': class_names[code], 'Kappa': f\"{k_cond:.4f}\"})\n","\n","    kappa_df = pd.DataFrame(kappa_data)\n","    report_lines.append(kappa_df.to_string(index=False))\n","    report_lines.append(\"\\n\\n\\t\\t----- End of Kappa Statistics -----\\n\")\n","\n","    return report_lines\n","\n","\n","#==============================================================================\n","# E. SCRIPT LOGIC - Interactive Collection\n","#==============================================================================\n","reference_data = []\n","current_point = None\n","\n","# Open datasets\n","try:\n","    base_dataset = rasterio.open(BASE_IMG_PATH)\n","    cnn_dataset = rasterio.open(CNN_IMG_PATH)\n","    rf_dataset = rasterio.open(RF_IMG_PATH)\n","except Exception as e:\n","    print(f\"Error opening files: {e}\")\n","\n","output_container = widgets.Output()\n","progress_label = widgets.Label()\n","\n","def on_button_clicked(b):\n","    global current_point\n","    reference_class = int(b.description.split(':')[0])\n","    y, x = current_point\n","    cnn_class = cnn_dataset.read(1)[y, x]\n","    rf_class = rf_dataset.read(1)[y, x]\n","    reference_data.append({\n","        'ref_x': x, 'ref_y': y, 'reference_class': reference_class,\n","        'cnn_class': cnn_class, 'rf_class': rf_class\n","    })\n","    next_point()\n","\n","def next_point():\n","    with output_container:\n","        clear_output(wait=True)\n","\n","        num_collected = len(reference_data)\n","\n","        if num_collected >= num_points_total:\n","            progress_label.value = \"Data collection complete! Generating reports...\"\n","            base_dataset.close(); cnn_dataset.close(); rf_dataset.close()\n","            final_df = pd.DataFrame(reference_data)\n","\n","            doc_filename = \"stratified_accuracy_report.docx\"\n","            doc = docx.Document()\n","\n","            cnn_report_text = generate_accuracy_report(final_df, \"CNN\", 'cnn_class', 'reference_class', CLASS_LABELS, CNN_IMG_PATH)\n","            print(\"=\"*58+\"\\n                 CNN MODEL REPORT                         \\n\"+\"=\"*58)\n","            for line in cnn_report_text: print(line)\n","            doc.add_heading('CNN MODEL REPORT', level=1)\n","            p = doc.add_paragraph(); p.add_run('\\n'.join(cnn_report_text)).font.name = 'Courier New'\n","            doc.add_page_break()\n","\n","            rf_report_text = generate_accuracy_report(final_df, \"Random Forest\", 'rf_class', 'reference_class', CLASS_LABELS, RF_IMG_PATH)\n","            print(\"\\n\\n\"+\"=\"*58+\"\\n            RANDOM FOREST MODEL REPORT                      \\n\"+\"=\"*58)\n","            for line in rf_report_text: print(line)\n","            doc.add_heading('RANDOM FOREST MODEL REPORT', level=1)\n","            p = doc.add_paragraph(); p.add_run('\\n'.join(rf_report_text)).font.name = 'Courier New'\n","            doc.add_page_break()\n","\n","            doc.add_heading('Raw Reference Data', level=1)\n","            doc.add_paragraph(\"The raw data collected during the interactive session.\")\n","            t = doc.add_table(rows=1, cols=len(final_df.columns)); t.style = 'Table Grid'\n","            for j, col_name in enumerate(final_df.columns): t.cell(0, j).text = col_name\n","            for i, row in final_df.iterrows():\n","                row_cells = t.add_row().cells\n","                for j, val in enumerate(row): row_cells[j].text = str(val)\n","\n","            doc.save(doc_filename)\n","            print(f\"\\n\\nReports successfully generated and saved to '{doc_filename}'.\")\n","            print(\"Downloading the Word document...\")\n","            files.download(doc_filename)\n","            return\n","\n","        progress_label.value = f\"Classifying point {num_collected + 1} of {num_points_total}...\"\n","\n","        # Get the next point from the ordered plan\n","        global current_point\n","        # --- CHANGE: The plan now includes the class name for context ---\n","        y, x, expected_class_name = sampling_plan[num_collected]\n","        current_point = (y, x)\n","        lon, lat = base_dataset.xy(y, x)\n","\n","        m = folium.Map(location=[lat, lon], zoom_start=22, tiles='https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', attr='Esri, et al.', height=400, width=800)\n","        folium.Marker([lat, lon], popup=\"Classify this exact point\").add_to(m)\n","\n","        map_widget = HTML(m._repr_html_())\n","        buttons = []\n","        for class_val, class_name in CLASS_LABELS.items():\n","            button = widgets.Button(description=f\"{class_val}: {class_name}\", button_style='primary', layout=Layout(width='auto'))\n","            button.on_click(on_button_clicked)\n","            buttons.append(button)\n","        button_box = HBox(buttons, layout=Layout(justify_content='center', flex_flow='wrap'))\n","\n","        # --- CHANGE: The title now tells you which class to look for ---\n","        title_html = HTML(f\"<h3><b>Point {num_collected + 1}/{num_points_total}</b>: Please verify this point for class: <b>{expected_class_name}</b></h3>\")\n","\n","        display(VBox([title_html, map_widget, button_box], layout=Layout(width='810px')))\n","\n","# --- Main execution ---\n","try:\n","    points_per_class_input = input(\"How many reference points do you want to collect PER CLASS? \")\n","    points_per_class = int(points_per_class_input)\n","\n","    # The source of stratification can be changed here (CNN_IMG_PATH or RF_IMG_PATH)\n","    sampling_plan = create_stratified_sampling_plan(CNN_IMG_PATH, CLASS_LABELS, points_per_class)\n","    num_points_total = len(sampling_plan)\n","\n","    print(f\"\\nStarting data collection for a total of {num_points_total} points...\")\n","    display(progress_label, output_container)\n","    next_point()\n","except Exception as e:\n","    print(f\"An error occurred: {e}. Please check your setup and file paths.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":812,"referenced_widgets":["68f4b01af77f4b0a93967eb425afb2e0","2e415b3a78274e6d9c7208ff37367ab1","318e470a31924f97988a00f1c6ab4411","a498282247584c1ba6d546df5f6e7f3f","3daed2a1f4024f858c753a1bf366ef2c","aa5fa90e3b5a425e9c3a73dba5421d42","fd165fdbbe3448c6a515ed2490d0ab4a","5d266380ab8140cd82b2d8cfcf7012d9","e6e1381692844053ac3a9121d0430ff7","e67c1766f8bb4f42b0d133c160a3e481","6a8bb8af69bd40cc82e0671dc112a7d8","b44bd829666d47b78195d9d42bcdae09","4bdda047b8fd4d93ae4896e1e8870173","b11bff3e0c914191bedef810ceabd282","113880a96f18424b91f192c11a85da89","64040f2a070b48c6970290bd66b96b74","51d856005107497c849c7628af5f6382","c611b60a67074b25b3b8f5fdb05011ba","ff1cc53dacf3432d8535424ff409ba8f","6ed3c07780ce48879c1b937272e01cf4","a0901e51bfcd4b6b96ebb11e74d4ae4c","a2573b13b74843389beabd7472dcf119","2aaab8c8cb794221a330d05928b636f9","fa190d4a627b4969b4f1abc997a5495b","b617e5dd58064615aa977f7cc1970eb5","e706937fcaf0455191f96aca6775afe8","cc725d509c53494ab120dde6d58358c4","ef3f77c5a13e4ae882ad11e56b75adc9","8b59971a085e4adcb76d3675050e5598","b47d4b7d2c2a4ac2ae019dc40be9fd28","2ac7436be95c4c42b69704488977d8fc","3e5f6e21328848d98ef351849293dd75","8f1c3bd4397f4a9aa8299bb1b926fa2d"]},"id":"B7piR15hzIxl","executionInfo":{"status":"ok","timestamp":1750414385021,"user_tz":-330,"elapsed":30173,"user":{"displayName":"DANESH SELWAL","userId":"10685518505246578435"}},"outputId":"c1e71240-b205-4c8b-9cc6-b1878722e985"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["How many reference points do you want to collect PER CLASS? 20\n","Creating stratified sampling plan (grouped by class)...\n","  - Finding pixels for class: Water\n","  - Finding pixels for class: Agriculture & Vegetation\n","  - Finding pixels for class: Settlement\n","  - Finding pixels for class: Mining\n","  - Finding pixels for class: Barren Land\n","  - Finding pixels for class: Forest\n","Sampling plan created successfully.\n","\n","Starting data collection for a total of 120 points...\n"]},{"output_type":"display_data","data":{"text/plain":["Label(value='')"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"68f4b01af77f4b0a93967eb425afb2e0"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Output()"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a498282247584c1ba6d546df5f6e7f3f"}},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"2ERl2VXFzJle"},"execution_count":null,"outputs":[]}]}